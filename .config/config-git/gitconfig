# vim: ft=gitconfig

[alias]
  # Examining
  s   = status
  ss  = status -uno   # shorter status - no untracked files
  sss  = status -suno # shorter shorter status

  lg   = log --graph --decorate --pretty=format:'%C(auto)%h %cd %d %s' --date=short
  lga  = log --graph --decorate --pretty=format:'%C(auto)%h %cd %d %s' --date=short --all       # log all
  lgb  = log --graph --decorate --pretty=format:'%C(auto)%h %cd %d %s' --date=short --branches  # log branches
  lgl  = log --graph --decorate # log long

  lgs  = log -S  # Search
  lgg  = log -G  # Grep

  ls   = ls-files
  lsu  = ls-files --others --exclude-standard
  lsau = ls-files --others
  dt = difftool

  br = branch
  cbr = rev-parse --abbrev-ref HEAD
  root = rev-parse --show-toplevel

  # Modifying
  a = add
  au = add -u
  rst = reset HEAD

  co = checkout
  ci = commit

  conflicts = !git ls-files --unmerged | cut -c51- | sort -u | xargs $EDITOR
  resolve   = !git ls-files --unmerged | cut -c51- | sort -u | xargs git add

  # submodules
  subdiff = !"git submodule foreach --recursive --quiet '[ \"$(git status -s)\" ] && echo \"--- $name ---\" && git status -s && git diff --unified=1 || :'"
  subbr   = !"git submodule foreach --recursive 'git rev-parse --abbrev-ref HEAD'"

  # List all aliases
  alias = !"git config --get-regexp alias | cut -f2- -d'.' | awk '{printf \"%-10s\", $1; for(i=2;i<=NF;++i) printf \"%s \", $i; print \"\"}'"

[core]
  editor = vim

[diff]
  tool = vimdiff

[difftool]
  prompt = false

[push]
  default = simple

[receive]
  denyCurrentBranch = refuse
